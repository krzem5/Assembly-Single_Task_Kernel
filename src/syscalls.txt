clock_get_converion(void) -> void
cpu_get_count(void) -> u32
drive_get_data(u32 handle,void* buffer,u32 size) -> _Bool
fd_close(u64 fd) -> s64
fd_dup(u64 fd,u32 flags) -> s64
fd_iter_get(u64 iterator,char* buffer,u32 size) -> s64
fd_iter_next(u64 iterator) -> s64
fd_iter_start(u64 fd) -> s64
fd_iter_stop(u64 iterator) -> s64
fd_open(u64 fd,const char* path,u32 length,u32 flags) -> s64
fd_path(u64 fd,char* buffer,u32 size) -> s64
fd_read(u64 fd,void* buffer,u32 size) -> s64
fd_resize(u64 fd,u64 size,u32 flags) -> s64
fd_seek(u64 fd,u64 offset,u32 type) -> s64
fd_stat(u64 fd,void* ptr,u32 size) -> s64
fd_write(u64 fd,const void* buffer,u32 size) -> s64
handle_get_data(u64 handle,void* buffer,u32 size) -> _Bool
handle_get_handle(u64 type,u64 handle) -> u64
handle_get_type(const char* name,u32 length) -> u64
memory_counter_get_data(u64 handle,void* buffer,u32 size) -> _Bool
memory_get_range(u32 index,void* buffer,u32 size) -> _Bool
memory_map(u64 length,u32 flags) -> void*
memory_object_allocator_get_data(u64 handle,void* buffer,u32 size) -> _Bool
memory_unmap(void* address,u64 length) -> _Bool
network_layer1_get_mac_address(void* buffer,u32 size) -> _Bool
network_layer2_poll(void* packet,u32 length,_Bool block) -> _Bool
network_layer2_send(const void* packet,u32 length) -> _Bool
numa_get_locality(u32 offset,void* buffer,u32 length) -> _Bool
numa_get_node(u32 index,void* buffer,u32 size) -> _Bool
numa_get_node_count(void) -> u32
numa_get_node_cpu(u32 index,u32 cpu_index,void* buffer,u32 size) -> _Bool
numa_get_node_memory_range(u32 index,u32 memory_range_index,void* buffer,u32 size) -> _Bool
partition_get_data(u64 handle,void* buffer,u32 size) -> _Bool
random_generate(void* buffer,u64 size) -> _Bool
scheduler_get_stats(u32 cpu_index,void* buffer,u32 size) -> _Bool
scheduler_get_timers(u32 cpu_index,void* buffer,u32 size) -> _Bool
serial_recv(void* buffer,u32 length,u64 timeout) -> u32
serial_send(const void* buffer,u32 length) -> void
system_get_string(u32 type,void* bufer,u32 size) -> u32
system_shutdown(u32 flags) noreturn -> void
thread_create(u64 rip,u64 rdi,u64 rsi,u64 stack_size) -> u64
thread_get_cpu_mask(u64 handle,void* buffer,u32 size) -> _Bool
thread_get_priority(u64 handle) -> u32
thread_set_cpu_mask(u64 handle,void* buffer,u32 size) -> _Bool
thread_set_priority(u64 handle,u32 priority) -> _Bool
thread_stop(void) noreturn -> void
