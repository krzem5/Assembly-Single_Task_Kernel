build_directories={
	required={
		"build"
		"build/gdb"
		"build/hashes"
		"build/initramfs"
		"build/initramfs/boot"
		"build/initramfs/boot/module"
		"build/initramfs/etc"
		"build/kernel"
		"build/keys"
		"build/lib"
		"build/module"
		"build/objects"
		"build/objects/kernel"
		"build/objects/kernel_coverage"
		"build/objects/kernel_debug"
		"build/objects/lib"
		"build/objects/lib_coverage"
		"build/objects/lib_debug"
		"build/objects/module"
		"build/objects/module_coverage"
		"build/objects/module_debug"
		"build/objects/tool"
		"build/objects/tool_debug"
		"build/objects/uefi"
		"build/objects/user"
		"build/objects/user_coverage"
		"build/objects/user_debug"
		"build/partitions"
		"build/share"
		"build/share/bin"
		"build/share/lib"
		"build/share/test"
		"build/tool"
		"build/uefi"
		"build/user"
		"build/vm"
		"build/vm/tpm"
	}
	empty={
		"build/share/bin"
		"build/share/lib"
	}
	empty_after_mode_change={
		"build/kernel"
		"build/lib"
		"build/module"
		"build/tool"
		"build/user"
	}
	delete_obsolete={
		{
			path="build/lib"
			src_path="src/lib"
			prefix="lib"
		}
		{
			path="build/module"
			src_path="src/module"
			prefix=""
		}
		{
			path="build/user"
			src_path="src/user"
			prefix=""
		}
	}
}
uefi={
	hash_file_path="build/hashes/uefi.release.txt"
	object_file_directory="build/objects/uefi/"
	common_libraries={
		compressor
		kfs2
	}
	command={
		compile={
			asm="nasm -f elf64 -O3 -Wall -Werror"
			c="gcc-12 -I/usr/include/efi -I/usr/include/efi/x86_64 -fno-stack-protector -ffreestanding -O3 -fpic -fshort-wchar -mno-red-zone -maccumulate-outgoing-args -fdiagnostics-color=always -DBUILD_UEFI=1 -DGNU_EFI_USE_MS_ABI -Dx86_64 -m64 -Wall -Werror -Wno-trigraphs -Wno-address-of-packed-member -Wno-frame-address -DNULL=((void*)0) -c"
		}
		link="ld -nostdlib -znocombreloc -znoexecstack -fshort-wchar -T /usr/lib/elf_x86_64_efi.lds -shared -Bsymbolic -o build/uefi/loader.efi /usr/lib/gcc/x86_64-linux-gnu/12/libgcc.a"
		patch="objcopy -j .text -j .sdata -j .data -j .dynamic -j .dynsym -j .rel -j .rela -j .reloc -S --target=efi-app-x86_64 build/uefi/loader.efi build/uefi/loader.efi"
	}
}
