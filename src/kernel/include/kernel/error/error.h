#ifndef _KERNEL_ERROR_ERROR_H_
#define _KERNEL_ERROR_ERROR_H_ 1
#include <kernel/types.h>



#define IS_ERROR(x) (((s64)(x))<0)

#define _ERROR(x) ((u64)(-((s64)(x))))

#define ERROR_OK _ERROR(0x0000)
#define ERROR_INVALID_SYSCALL _ERROR(0x0001)
#define ERROR_INVALID_ARGUMENT(index) _ERROR((0x0002|((index)<<16)))
#define ERROR_NOT_FOUND _ERROR(0x0003)
#define ERROR_INVALID_HANDLE _ERROR(0x0004)
#define ERROR_NO_ACL _ERROR(0x0005)
#define ERROR_DENIED _ERROR(0x0006)
#define ERROR_UNSUPPORTED_OPERATION _ERROR(0x0007)
#define ERROR_NO_SPACE _ERROR(0x0008)
#define ERROR_NO_DATA _ERROR(0x0009)
#define ERROR_INVALID_FORMAT _ERROR(0x000a)
#define ERROR_INVALID_ADDRESS _ERROR(0x000b)
#define ERROR_DISABLED_OPERATION _ERROR(0x000c)
#define ERROR_NO_MEMORY _ERROR(0x000d)
#define ERROR_ALREADY_PRESENT _ERROR(0x000e)
#define ERROR_ALREADY_MOUNTED _ERROR(0x000f)
#define ERROR_FAILED _ERROR(0x0010)
#define ERROR_MASKED _ERROR(0x0011)
#define ERROR_SIGNAL(signal) _ERROR((0x0012|((signal)<<16)))



typedef u64 error_t;



#endif
